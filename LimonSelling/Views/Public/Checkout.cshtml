@using LimonSelling.Models
@model LimonSelling.Models.Order

@{
    ViewBag.Title = "OrderNow";
    Layout = "~/Views/Shared/_PublicLayout.cshtml";
}
@{
    int c = (int)Session["count"];
}
@if (c < 0)
{
    <h1> You Cart is Empty</h1>
    <span class="alert-danger"></span>
}
else
{
    <h2>Confirm Order</h2>
    using (Html.BeginForm("ConfirmOrder", "Public", FormMethod.Post))

    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <table class="table table-hover">
            <tr>
                <th>Remove</th>
                <th>Product Id</th>
                <th>Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>SubTotal</th>
            </tr>
            @{ float s = 0;
                Session["count"] = 0;
            }
            @foreach (Item item in (List<Item>)Session["cart"])
            {
                s += item.Pr.price * item.Qty;
                Session["count"] = Convert.ToInt32(Session["count"]) + item.Qty;
                <tr>
                    <td>@Html.ActionLink("Delete", "DeleteOrder", "Public", new { id = @item.Pr.id }, null)</td>
                    <td>@item.Pr.id</td>
                    <td>@item.Pr.name</td>
                    <td>@item.Pr.price</td>
                    <td><input type="text" name="Qty" value="@item.Qty" readonly /></td>
                    <td>@(item.Pr.price * item.Qty)</td>
                </tr>


            }
            <tr>
                <td align="right" colspan="5"> Sub-total:</td>
                <td id="sub">@s</td>
            </tr>
            total iteam:@Session["count"]
        </table>
        @ViewBag.message
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.number, "Mobile Number", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.number, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.number, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.deliveryCharge, " Delivery Charge:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <b>

                        Dhaka(50TK):
                    </b>
                    <input id="dhaka" name="Delivery" type="radio" value="50" required onblur="calculate()" />
                    <b>
                        Outside Dhaka(150TK):
                    </b>

                    <input id="outside" name="Delivery" type="radio" value="150" required onblur="calculate()" />

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.total, "Total", htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">
                    <input type="text" name="total" value="" id="total" readonly="" required size="50" />
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.paymentMethodId, "Payment Method", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("paymentMethodId", null, "-Select Payment Method-", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.paymentMethodId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.deliveryAddress, "Delivery Address", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.deliveryAddress, 2, 80, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.deliveryAddress, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.cityId, "City", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("cityId", null, "-Select City", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.cityId, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" name="Submit" value="Submit" class="text-danger" />
                </div>
            </div>
        </div>


    }
    @Html.ActionLink("Continue Shopping", "Product", "Public");
    @Html.ActionLink("Checkout", "Checkout", "Public");
}

@*<a href="javascript:void(0);" onclick="history.go(-1);">Continue Shopping</a>*@
<script>
    calculate = function () {
        var rate_value;
        if (document.getElementById('dhaka').checked) {
            rate_value = document.getElementById('dhaka').value;
        }
        if (document.getElementById('outside').checked) {
            rate_value = document.getElementById('outside').value;
        }

        var sub = parseFloat($('#sub').text()) || 0;

        document.getElementById('total').value = parseInt(rate_value) + sub;

    }

</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
